When we want to maximize the number of buses, we will try to maximise the number of 4's.
While trying to minimize, we will try to maximize the number of 6's. 

There is no answer possible if N = 1, 3 (mod 4). 

There are only 2 cases where an answer exists. 
N = 0, 2 (mod 4)

-----

void solve()
{
    long long no_of_wheels;
    cin >> no_of_wheels;

    long long minimum, maximum;
    switch(no_of_wheels%4)
    {
        case 0: maximum = no_of_wheels/4;
                minimum = 2*(no_of_wheels/12) + (no_of_wheels%12 == 6 ? (no_of_wheels%12)/6 : (no_of_wheels%12)/4);
                          break;

        case 2: if(no_of_wheels == 2)
                {
                    cout << "-1\n";
                    return;
                }
                maximum = 1 + (no_of_wheels - 6)/4;
                no_of_wheels -= 6;
                minimum = 1 + 2*(no_of_wheels/12) + (no_of_wheels%12 == 6 ? (no_of_wheels%12)/6 : (no_of_wheels%12)/4);
                break;

        default: cout << "-1\n";
                 return;
    }

    cout << minimum << " " << maximum << "\n";
}
