Let us keep track of the number of segments we have to change. 

Let (k[i] = B[i] - A[i])

If (k[i] != k[i - 1]), then it means that we must begin a new segment starting at i. 

Also, A[0] = B[0] = 0 for convenience. 

We also need to ensure that k is never negative. 

------


void solve()
{
    int no_of_elements;
    cin >> no_of_elements;

    vector <int> A(no_of_elements + 1);
    for(int i = 1; i <= no_of_elements; i++)
    {
        cin >> A[i];
    }

    vector <int> B(no_of_elements + 1);
    for(int i = 1; i <= no_of_elements; i++)
    {
        cin >> B[i];
    }

    int segments = 0;
    for(int i = 1; i <= no_of_elements; i++)
    {
        if(A[i] == B[i])
        {
            continue;
        }

        if(A[i] > B[i])
        {
            segments = 100000000;
            break;
        }

        if(B[i] - A[i] != B[i - 1] - A[i - 1])
        {
            segments++;
        }
    }

    cout << (segments > 1 ? "No\n" : "Yes\n");
}
