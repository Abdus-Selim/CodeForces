We can iterate over every integer in between L and R and check if each integer has distinct digits. 

We will never have to go too far to find an integer with all distinct digits or find that it doesn't exist.

We can check if N is made up of all distinct digits by capturing the frequency of all it's digits and checking if each of their frequencies is <= 1


-----

#include <iostream>
#include <vector>

using namespace std;

int distinct_digits(int n)
{
   vector <int> frequency(10, 0);

   while(n > 0)
   {
       if(frequency[n%10] > 0)
            return false;

       frequency[n%10]++;

       n /= 10;
   }

   return true;
}

int main()
{
    int left, right;
    cin >> left >> right;

    for(int i = left; i <= right; i++)
    {
        if(distinct_digits(i))
        {
            cout << i << endl;

            return 0;
        }
    }

    cout << "-1\n";
    return 0;
}