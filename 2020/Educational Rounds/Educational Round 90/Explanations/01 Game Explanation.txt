We will either delete all the 1s or all the 0s

Each deletion will remove 1 of each.
So the number of deletions is equal to the number of 1s or 0s, whichever is minimum

We just have to check the parity of the total number of moves to determine the winner. 
-----

void solve()
{
    string S;
    cin >> S;

    int zeroes = 0, ones = 0;
    for(int i = 0; i < S.size(); i++)
    {
        if(S[i] == '0')
        {
            zeroes++;
        }
        else
        {
            ones++;
        }
    }

    int no_of_moves = min(zeroes, ones);

    cout << (no_of_moves%2 == 1 ? "DA\n" : "NET\n");
}
