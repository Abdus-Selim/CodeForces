If we perform i iterations in the second loop, res will increase by i each time

We need to know the initial balance necessary to go through the array without the sum being 0

If the balance goes below 0 at some point, we update the initial balance and try again 

-----

void solve()
{
    string S;
    cin >> S;

    long long res = 0;
    for(long long i = 0, balance = 0, initial_balance = 0; i < S.size(); i++)
    {
        if(S[i] == '+')
        {
            balance++;
        }
        else
        {
            balance--;
        }

        if(initial_balance + balance < 0)
        {
            int no_of_retries = abs(initial_balance + balance);

            initial_balance += no_of_retries;

            res += no_of_retries*(i + 1);
        }
    }

    res += S.size();

    cout << res << "\n";
}
