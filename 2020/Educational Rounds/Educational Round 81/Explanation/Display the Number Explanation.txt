Given two integers, the one with the larger length is always larger.

1. First, we will try to maximise the length

2. The digit with the minimum cost is 1

3. So, we will put as many 1s as possible

4. If n is even, then we can just put all 1s

5. If n is odd, we will have one segment left over. So we can try using it.

6. 7 costs only 3 segments. So, we will replace one of the 1s with 7

7. Out of all the 1s, it is optimal to replace the 1 which comes first from the left as it is the most significant.

------

oid solve()
{
    int n;
    scanf("%d", &n);

    int no_of_1s = 0, no_of_7s = 0;

    if(n%2 == 0)
    {
        no_of_1s = n/2;
    }
    else
    {
        no_of_1s = (n - 3)/2;
        no_of_7s = 1;
    }

    if(no_of_7s > 0)
    {
        printf("7");
    }

    for(int i = 1; i <= no_of_1s; i++)
    {
        printf("1");
    }

    printf("\n");

    return;
}
