There are 2 types of palindromes of length 3 -

(axa) and (aaa)

1. If we have any alphabet who's frequency is 3, we are done

2. If we have any alphabet who's frequency is 2,
we can append any of the alphabets in between them.

We just have to be careful if frequency[A[i]] = 2 and (A[i] = A[i - 1])
as there is no middle character

-----

void solve()
{
    int no_of_elements;
    cin >> no_of_elements;

    int palindrome_possible = false;
    vector <int> frequency(no_of_elements + 1, 0);
    vector <int> A(no_of_elements + 1);
    for(int i = 1; i <= no_of_elements; i++)
    {
        cin >> A[i];

        frequency[A[i]]++;

        if(frequency[A[i]] == 3)
        {
            palindrome_possible = true;
        }

        if(frequency[A[i]] == 2 && (i > 1 && A[i] != A[i - 1]) )
        {
            palindrome_possible = true;
        }
    }

    cout << (palindrome_possible ? "YES\n" : "NO\n");
}
