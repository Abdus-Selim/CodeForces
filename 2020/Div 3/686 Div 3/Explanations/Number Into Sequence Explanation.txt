Since A[i] has to be divisible by each A[1, i - 1],

All A[1, k] must have the same prime factor.

Suppose p^k is the prime with the largest exponent in the prime factorization of N.

We can have k elements

p, p, p, .... , (N/p^{k - 1})

-----

void solve()
{
    long long n;
    cin >> n;

    long long final_n = n;
    pair <int, long long> best_prime;

    vector <pair <int, long long> > prime_exponents;
    for(long long i = 2; i*i <= n; i++)
    {
        if(n%i == 0)
        {
            int exponent = 0;

            while(n%i == 0)
            {
                n /= i;
                exponent++;
            }

            prime_exponents.push_back(make_pair(exponent, i));

            best_prime = max(best_prime, prime_exponents.back());
        }
    }

    if(n > 1)
    {
        prime_exponents.push_back(make_pair(1, n));

        best_prime = max(best_prime, prime_exponents.back());
    }

    cout << best_prime.first << "\n";
    for(int i = 1; i < best_prime.first; i++)
    {
        cout << best_prime.second << " ";

        final_n /= best_prime.second;
    }

    cout << final_n << "\n";
}
