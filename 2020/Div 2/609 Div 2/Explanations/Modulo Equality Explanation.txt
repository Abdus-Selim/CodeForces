Let us check all possible candidates that we can add to A to make it equal to B.

When A = B, then A[1] is equal to some element in B.

We will iterate over all B, and check if x = (B[i] - A[1]) satisfies the condition.

We will add x to the entire array A and then check if A = B.

This can be done by comparing the sorted arrays A and B.

-----

int add_and_check_equality(vector <int> A, vector <int> B, int m, int x)
{
    for(int i = 1; i < A.size(); i++)
    {
        A[i] = (A[i] + x)%m;
    }

    sort(all(A));

    for(int i = 1; i < B.size(); i++)
    {
        if(A[i] != B[i])
        {
            return false;
        }
    }

    return true;
}

int main()
{
    int no_of_elements, m;
    cin >> no_of_elements >> m;

    vector <int> A(no_of_elements + 1, 0);
    for(int i = 1; i <= no_of_elements; i++)
    {
        cin >> A[i];

        A[i] %= m;
    }

    vector <int> B(no_of_elements + 1, 0);
    for(int i = 1; i <= no_of_elements; i++)
    {
        cin >> B[i];

        B[i] %= m;
    }

    sort(all(B));

    int minimum_moves = m;
    for(int i = 1; i <= no_of_elements; i++)
    {
        int to_add = (B[i] - A[1] + m)%m;

        if(add_and_check_equality(A, B, m, to_add))
        {
            minimum_moves = min(minimum_moves, to_add);
        }
    }

    cout << minimum_moves << "\n";
    return 0;
}
