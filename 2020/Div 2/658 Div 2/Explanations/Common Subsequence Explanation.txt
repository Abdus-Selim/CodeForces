Sort the arrays.

Go through every element in A and check if it exists in B

If there exists a common subsequence, there will be a common subsequence of length 1

If there is no common subsequnece of length 1, there will be no common subsequence

-----

void solve()
{
    int n, m;
    cin >> n >> m;

    vector <int> A(n);
    for(int i = 0; i < n; i++)
    {
        cin >> A[i];
    }

    sort(all(A));

    vector <int> B(m);
    for(int i = 0; i < m; i++)
    {
        cin >> B[i];
    }

    sort(all(B));

    for(int i = 0; i < A.size(); i++)
    {
        if(binary_search(B.begin(), B.end(), A[i]))
        {
            cout << "YES\n";

            cout << "1 " << A[i] << "\n";

            return;
        }
    }

    cout << "NO\n";
}
